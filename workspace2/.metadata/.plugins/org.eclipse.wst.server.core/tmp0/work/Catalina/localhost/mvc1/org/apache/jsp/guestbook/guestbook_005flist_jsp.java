/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-20 06:19:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.guestbook;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.kosa.mvc1.guestbook.*;
import com.kosa.mvc1.common.*;

public final class guestbook_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/include/navbar.jsp", Long.valueOf(1674012833327L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.kosa.mvc1.guestbook");
    _jspx_imports_packages.add("com.kosa.mvc1.common");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String pg = request.getParameter("pg");
String searchOpt = request.getParameter("searchOpt");
String searchKey = request.getParameter("searchKey");
if(pg==null || pg.equals("")){
	pg="0";
}
if(searchOpt==null || searchOpt.equals("")){
	searchOpt="";
}
if(searchKey==null || searchKey.equals("")){
	searchKey="";
}



      out.write("\r\n");
      out.write("<form name=\"myform\" id=\"myform\">\r\n");
      out.write("	<input type=\"hidden\" name=\"cmd\" id=\"cmd\"	/>\r\n");
      out.write("	<input type=\"hidden\" name=\"pg\" id=\"pg\"	value=\"");
      out.print(pg);
      out.write("\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"searchOpt\" id=\"searchOpt\" value=\"");
      out.print(searchOpt );
      out.write("\"	/>\r\n");
      out.write("<!-- 이 페이지에서 넘길 파라미터는 cmd(실행동작지정)와 pg(페이지처리), searchOpt(검색조건구분) -->\r\n");
      out.write("\r\n");
      out.write("<!-- 메뉴 -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");

// 공통변수 선언
String CONTEXT = request.getContextPath();

      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- 메뉴 -->\r\n");
      out.write("	<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("		<a href=\"");
      out.print(CONTEXT);
      out.write("/index.jsp\">\r\n");
      out.write("		<img\r\n");
      out.write("				src=\"");
      out.print(CONTEXT);
      out.write("/images/ddd.png\" alt=\"Avatar Logo\"\r\n");
      out.write("				style=\"width: 40px;\" class=\"rounded-pill\">\r\n");
      out.write("			</a>\r\n");
      out.write("\r\n");
      out.write("			<button class=\"navbar-toggler\" type=\"button\"\r\n");
      out.write("				data-bs-toggle=\"collapse\" data-bs-target=\"#collapsibleNavbar\">\r\n");
      out.write("				<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n");
      out.write("				<ul class=\"navbar-nav\">\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" href=\"");
      out.print(CONTEXT);
      out.write("/guestbook.do?cmd=list&pg=0\">방명록</a></li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" href=\"");
      out.print(CONTEXT);
      out.write("/gallery.do?cmd=list&pg=0\">갤러리</a></li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Link</a></li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Link</a></li>\r\n");
      out.write("					<li class=\"nav-item dropdown\"><a\r\n");
      out.write("						class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\"\r\n");
      out.write("						data-bs-toggle=\"dropdown\">Dropdown</a>\r\n");
      out.write("						<ul class=\"dropdown-menu\">\r\n");
      out.write("							<li><a class=\"dropdown-item\" href=\"#\">Link</a></li>\r\n");
      out.write("							<li><a class=\"dropdown-item\" href=\"#\">Another link</a></li>\r\n");
      out.write("							<li><a class=\"dropdown-item\" href=\"#\">A third link</a></li>\r\n");
      out.write("						</ul></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			if (session.getAttribute("m_userid") == null || session.getAttribute("m_userid").equals("")) {
			
      out.write("\r\n");
      out.write("			<ul class=\"navbar-nav justifu-content-end\">\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("					href=\"");
      out.print(CONTEXT);
      out.write("/member.do?cmd=member_login\">로그인</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("					href=\"");
      out.print(CONTEXT);
      out.write("/member.do?cmd=member_write\">회원가입</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			");

			} else {
			
      out.write("\r\n");
      out.write("			<ul class=\"navbar-nav justifu-content-end\">\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"#none\">");
      out.print(session.getAttribute("m_name"));
      out.write("</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"#none\"\r\n");
      out.write("					onclick=\"goLogout()\">로그아웃</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("	function goLogout() {\r\n");
      out.write("		let xhttp = new XMLHttpRequest();\r\n");
      out.write("		let url = \"/mvc1/member.do?cmd=member_logout\";\r\n");
      out.write("\r\n");
      out.write("		xhttp.onload = function() {\r\n");
      out.write("			console.log(this.responseText);\r\n");
      out.write("			let data = JSON.parse(this.responseText);\r\n");
      out.write("			alert(\"로그아웃되었습니다.\");\r\n");
      out.write("			location.href = \"/mvc1/index.jsp\";\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		xhttp.open(\"GET\", url, true);\r\n");
      out.write("		xhttp.send();\r\n");
      out.write("	}\r\n");
      out.write("</script>");
      out.write("\r\n");
      out.write("<div class=\"container mt-3\">\r\n");
      out.write("  <h3>게시판</h3>\r\n");
      out.write("  \r\n");
      out.write("   <div class=\"input-group mt-3 mb-3\">\r\n");
      out.write("	  <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\">\r\n");
      out.write("	  <span id=\"select\">선택하세요</span>\r\n");
      out.write("	  </button>\r\n");
      out.write("	  <ul class=\"dropdown-menu\">\r\n");
      out.write("	    <li><a class=\"dropdown-item\" href=\"#none\" onclick=\"goSelect('1')\">제목</a></li>\r\n");
      out.write("	    <li><a class=\"dropdown-item\" href=\"#none\" onclick=\"goSelect('2')\">내용</a></li>\r\n");
      out.write("	    <li><a class=\"dropdown-item\" href=\"#none\" onclick=\"goSelect('3')\">제목+내용</a></li>\r\n");
      out.write("	  </ul>\r\n");
      out.write("	  <!-- 서버로 키값을 넘기는 input 태그 -->\r\n");
      out.write("	  <input type=\"text\" class=\"form-control\" placeholder=\"검색어를 입력하세요\"\r\n");
      out.write("	  name=\"searchKey\" id=\"searchKey\" value=\"");
      out.print(searchKey);
      out.write("\">\r\n");
      out.write("	  \r\n");
      out.write("	  <div class=\"input-group-append\">\r\n");
      out.write("	  	<button class=\"btn btn-primary\" type=\"button\" onclick=\"goSearch()\">GO</button>\r\n");
      out.write("	  </div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("   <table class=\"table\">\r\n");
      out.write("   <!-- 테이블 열별로 공통 스타일을 적용하고자 할 때 colgroup 사용, 각 컬럼의 크기 지정에 많이 사용됨 -->\r\n");
      out.write("   <colgroup>\r\n");
      out.write("   	<col style=\"width:8%\">\r\n");
      out.write("   	<col style=\"width:*\">\r\n");
      out.write("   	<col style=\"width:12%\">\r\n");
      out.write("   	<col style=\"width:16%\">\r\n");
      out.write("   	<col style=\"width:12%\">\r\n");
      out.write("   </colgroup>\r\n");
      out.write("    <thead class=\"table-dark\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>번호</th>\r\n");
      out.write("        <th>제목</th>\r\n");
      out.write("        <th>작성자</th>\r\n");
      out.write("        <th>작성일</th>\r\n");
      out.write("        <th>조회수</th>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    ");

    int totalCnt = (int)request.getAttribute("totalCnt");
    // 다운캐스팅
    List<GuestbookDTO> list = (List<GuestbookDTO>)request.getAttribute("list");
    for(GuestbookDTO dto : list){
    	String url=CONTEXT+"/guestbook.do?cmd=view&seq="+dto.getSeq();
    
      out.write("\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td>");
      out.print(totalCnt-dto.getRnum()+1);
      out.write("</td>		<!-- sequence를 직접적으로 노출하지 않는다 -->\r\n");
      out.write("        <td><a href=\"");
      out.print(url);
      out.write('"');
      out.write('>');
      out.print(dto.getTitle() );
      out.write("</a></td>\r\n");
      out.write("        <td>");
      out.print(dto.getM_name() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(dto.getWdate() );
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(dto.getHit() );
      out.write("</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      ");

    }
      
      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write(" </div>\r\n");
      out.write(" <div class=\"container\" style=\"text-align:right\">\r\n");
      out.write("  ");
      out.print(Pager.makeTag(request, totalCnt, 10));
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write(" <div class=\"container\" style=\"text-align:right\">\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-primary\" id=\"btnWrite\">글쓰기</button>\r\n");
      out.write(" </div>\r\n");
      out.write("  \r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("	let titles=[\"선택하세요\", \"제목\", \"내용\", \"제목+내용\"];\r\n");
      out.write("	window.onload=()=>{\r\n");
      out.write("		// 자바스크립트에서 자바 코드 접근 가능\r\n");
      out.write("		let sel = '");
      out.print(searchOpt);
      out.write("';\r\n");
      out.write("		console.log(sel);\r\n");
      out.write("		if(sel==\"\"){\r\n");
      out.write("			sel=0;			\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		let btnWrite = document.getElementById(\"btnWrite\");\r\n");
      out.write("			btnWrite.addEventListener(\"click\", ()=>{\r\n");
      out.write("			$(\"#select\").html(titles[sel]);			\r\n");
      out.write("			let m_userid = '");
      out.print(session.getAttribute("m_userid"));
      out.write("';\r\n");
      out.write("			console.log(m_userid);\r\n");
      out.write("			if(m_userid==\"null\"||m_userid==\"\"){\r\n");
      out.write("				alert(\"로그인이 필요합니다.\");\r\n");
      out.write("				location.href=\"");
      out.print(CONTEXT);
      out.write("/member.do?cmd=member_login\";\r\n");
      out.write("				// 로그인 페이지로 이동하기\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			let frm = document.myform;\r\n");
      out.write("			frm.action = \"");
      out.print(CONTEXT);
      out.write("/guestbook.do\";\r\n");
      out.write("			frm.cmd.value=\"write\";\r\n");
      out.write("			frm.submit();\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function goPage(page){		// page는 page 번호\r\n");
      out.write("		var frm = document.myform;\r\n");
      out.write("		frm.pg.value = page;		// 어느 페이지로 이동할지에 대한 패러미터값이 담긴 page\r\n");
      out.write("		frm.cmd.value=\"list\";\r\n");
      out.write("		frm.action=\"");
      out.print(CONTEXT);
      out.write("/guestbook.do\";\r\n");
      out.write("		frm.submit();\r\n");
      out.write("	}	\r\n");
      out.write("		\r\n");
      out.write("	function goSelect(sel){	// 검색 조건 카테고리를 지정해주는 메소드\r\n");
      out.write("		$(\"#searchOpt\").val(sel);	// 여기서 sel은 onclick=\"goSelect('1')\"의 '1'\r\n");
      out.write("		$(\"#select\").html(titles[sel]);\r\n");
      out.write("		// li태그에는 value가 없어서 서버로 값을 보낼 수 없기 때문에 hidden 태그에 값을 저장\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function goSearch(){\r\n");
      out.write("		var frm = document.myform;\r\n");
      out.write("		frm.pg.value=0;			// 검색을 할 때 현재 페이지 위치가 32페이지인데 결과값이 5페이지밖에 안 된다면 문제가 발생하므로, 검색을 하면 무조건 1페이지로 이동하도록\r\n");
      out.write("		frm.cmd.value=\"list\";\r\n");
      out.write("		frm.action=\"");
      out.print(CONTEXT);
      out.write("/guestbook.do\";\r\n");
      out.write("		frm.submit();\r\n");
      out.write("	}		\r\n");
      out.write("	\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
